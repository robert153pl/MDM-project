library(readxl)
Drukarki <- read_excel("Dane/Drukarki.xlsx")
View(Drukarki)
library(dplyr)
library(ggplot2)
Drukarki %>% colnames()
#Select columns for analysis
head(Drukarki,10)
zbior<-Drukarki %>% select(c(2,3,19,4,12))
rownames(zbior)<-Drukarki$`printer model`
zbior<-as.data.frame(zbior)
rownames(zbior)<-Drukarki$`printer model`
colnames(Drukarki)
colnames(zbior)
zbior<-zbior %>% filter(complete.cases(.))
zbior
length(zbior)
length(zbior$price)
zbior<-Drukarki %>% select(c(2,3,16,4,12,8))
zbior<-Drukarki %>% select(c(2,3,16,4,12,8))
zbior<-as.data.frame(zbior)
rownames(zbior)<-Drukarki$`printer model`
colnames(zbior)
#Remove NA's records
zbior<-zbior %>% filter(complete.cases(.))
length(zbior$price)
colnames(zbior)
crit<-c("min","min",rep("max",4))
crit
crit<-c("min","min","min",rep("max",3))
crit
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.35, 0.25, 0.05,0.12)
sum(weights)
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.35, 0.25, 0.05,0.12,0.22,0.01)
sum(weights)
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
##using TOPSIS method to find best printer according to criterias
library(MCDA)
?TOPSIS()
results<-TOPSIS(zbior, weights, crit)
zbior
zbior$`price of toner/cartridge set`
typeof(zbior)
typeof(zbior$price)
typeof(zbior$`printer dimensions: Height [mm]`)
zbior$`average user/expert rating [1-5]`
typeof(zbior$`average user/expert rating [1-5]`)
as.double(zbior$`average user/expert rating [1-5]`)
zbior<-zbior %>%mutate(`average user/expert rating [1-5]`=as.numeric(`average user/expert rating [1-5]`)) %>% filter(complete.cases(.))
#Remove NA's records
zbior$`average user/expert rating [1-5]`
length(zbior$price)
crit<-c("min","min","min",rep("max",3))
crit
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
##using TOPSIS method to find best printer according to criterias
library(MCDA)
?TOPSIS()
results<-TOPSIS(zbior, weights, crit)
results
max(results)
View(Drukarki)
#Using different weights  - technical parameters are more important
colnames(zbior)
sum(weig)
sum(weigths)
sum(weigts)
weights<-c(0.15, 0.15, 0.05,0.12,0.22,0.06)
sum(weigts)
sum(weights)
weights<-c(0.15, 0.15, 0.05,0.3,0.22,0.06)
sum(weights)
weights<-c(0.15, 0.15, 0.05,0.3,0.22,0.13)
sum(weights)
results<-TOPSIS(zbior, weights, crit)
max(results)
results
max(results)
normalized_data<-scale(zbior)
normalized_data<-as.data.frame(normalized_data)
Suma<-rowSums(normalized_data)
cat("Najlepsza decyzja to:",decisions_data[which.max(Suma),1])
cat("Najlepsza decyzja to:",Drukarki[which.max(Suma),1])
Drukarki[which.max(Suma),1]
Suma
##Normalization (only technical parameters)
colnames(zbior)
zbior2<-zbior[,c(3:6)]
normalized_data<-scale(zbior2)
normalized_data<-as.data.frame(normalized_data)
Suma<-rowSums(normalized_data)
cat("Najlepsza decyzja to:",Drukarki[which.max(Suma),1])
Drukarki[which.max(Suma),1]
results<-TOPSIS(zbior, weights, crit)
max(results)
results
colnames(zbior)
zbior2<-zbior[,c(4:6)]
normalized_data<-scale(zbior2)
normalized_data<-as.data.frame(normalized_data)
Suma<-rowSums(normalized_data)
Drukarki[which.max(Suma),1]
View(Drukarki)
crit<-c("min","minddd","min",rep("max",3))
crit
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
results<-TOPSIS(zbior, weights, crit)
results
weights
crit
crit<-c("min","min","min",rep("max",3))
results<-TOPSIS(zbior, weights, crit)
crit<-c("min","xd","min",rep("max",3))
results<-TOPSIS(zbior, weights, crit)
results
summary(results)
crit
crit<-c("min","min","min",rep("max",3))
crit
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
##using TOPSIS method to find best printer according to criterias
library(MCDA)
?TOPSIS()
results<-TOPSIS(zbior, weights, crit)
max(results)
summary(results)
#Using different weights  - technical parameters are more important
colnames(zbior)
weights<-c(0.15, 0.15, 0.05,0.3,0.22,0.13)
sum(weights)
crit<-c("max","min","min",rep("max",3))
crit
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
results<-TOPSIS(zbior, weights, crit)
max(results)
summary(results)
crit<-c("min","min","min",rep("max",3))
results<-TOPSIS(zbior, weights, crit)
max(results)
crit<-c("min","min","min",rep("min",3))
crit
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
results<-TOPSIS(zbior, weights, crit)
max(results)
summary(results)
results
crit<-c("min","min","min",rep("max",3))
##Fixing of variables
#Important predictors: prices, rating and speed.
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
results<-TOPSIS(zbior, weights, crit)
results
max(results)
summary(results)
results
results %>% as.data.frame()
results %>% as.data.frame()->ramka
ramka
ramka<-results %>% as.data.frame()
ramka$nazwa<-rownames(ramka)
ramka$.<-ramka$.
ramka$wynik<-ramka$.
ramka %>% ggplot()+geom_col(aes(nazwa,wynik))
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(nazwa,wynik))
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,wynik),wynik))
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik))
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostblue")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlabs("Printer")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab(result)+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ramka %>% mutate(nazwa=strtrim(nazwa, 10)) %>%  arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()
ramka %>% mutate(nazwa=strtrim(nazwa, 10)) %>%  arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()
ramka %>% mutate(nazwa=strtrim(nazwa, 10)) %>%   ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()
ramka %>%    ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()
ramka %>% mutate(nazwa=strtrim(nazwa, 15)) %>%   ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+ylab("result")+labs(title="TOPSIS result")+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlabs("Printer")+theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+theme_minimal(title="TOPSIS result")+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")
+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")
+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+theme_minimal()
ramka %>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")+
theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ramka %>% head(5)%>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")+
theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ramka %>% head(2)%>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")+
theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ramka %>%arrange(desc(wynik))%>% head(5)%>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")+
theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
weights<-c(0.3, 0.25, 0.05,0.12,0.22,0.06)
##using TOPSIS method to find best printer according to criterias
results<-TOPSIS(zbior, weights, crit)
results
max(results)
summary(results)
ramka<-results %>% as.data.frame()
ramka$nazwa<-rownames(ramka)
ramka$wynik<-ramka$.
ramka %>%arrange(desc(wynik))%>% head(5)%>% arrange(desc(wynik))%>% ggplot()+geom_col(aes(reorder(nazwa,-wynik),wynik), fill="ghostwhite")+xlab("Printer")+labs(title="TOPSIS result")+
theme_minimal()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
max(results)
#Only technical parameters
colnames(zbior2)
weigths2<-c(0.5,0.3,0.2)
crit2<-c(rep(max,3))
crit2<-c(rep("max",3))
results2<-TOPSIS(zbior2, weigths2, crit2)
arrange(desc(results2))
results2
